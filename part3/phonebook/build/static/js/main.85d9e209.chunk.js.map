{"version":3,"sources":["services/personsDB.js","Components/Display.js","Components/PersonForm.js","Components/Filter.js","Components/Notification.js","App.js","index.js"],"names":["baseURL","axios","get","then","response","data","newObj","post","id","console","log","delete","put","Note","person","handleDeletePerson","name","number","onClick","window","confirm","personDB","confirmDeletion","Display","allpersons","newFilter","length","map","filter","toLowerCase","includes","PersonForm","props","onSubmit","value","newName","onChange","namehandler","newNumber","numberhandler","type","Filter","msg","Notification","message","style","color","background","fontSize","borderStyle","borderRadius","padding","marginBottom","App","useState","allPersons","setAllPersons","setNewName","setNewNumber","setNewFilter","notification","setNotification","useEffect","handleNotification","setTimeout","event","target","preventDefault","repeated","updatedNumber","reduce","t","Math","max","concat","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.85d9e209.chunk.js","sourcesContent":["import axios from \"axios\";\nconst baseURL = '/api/persons';\n\nconst getAll = () =>{\n    const request = axios.get(baseURL);\n    return request.then(response =>{\n        return response.data;\n    })\n}\nconst create = newObj =>{\n    return axios.post(baseURL , newObj)\n            .then(response => {\n                return response.data;\n            })\n}\n\nconst remove = id =>{\n    console.log(\"clicked for phone no\" + id);\n    axios.delete(baseURL+'/'+id);\n\n}\nconst update = newObj => {\n    return axios.put(baseURL+'/'+newObj.id , newObj).then(\n        response => { return response.data}\n    )\n}\n\nexport default {getAll ,create, remove, update}; ","import React, { useState } from 'react';\nimport personDB from '../services/personsDB'\n\n\nconst Note = ({person , handleDeletePerson}) =>{\n  const confirmDeletion = (person) =>{\n   if(window.confirm(\"Delete \"+ person.name + \" ?\")){\n     personDB.remove(person.id);\n     handleDeletePerson(person.id);\n\n    }\n  }\n\n  return (\n    <li>{person.name} {person.number} \n        <button \n        onClick = {() => {confirmDeletion(person)}}>\n          delete\n        </button>\n    </li>\n  )\n}\n\n\n\nconst Display = ({allpersons, newFilter, handleDeletePerson}) => {\n    if(newFilter.length ===0 ){\n      return(\n        allpersons.map(person =>\n          <Note key = {person.id} person = {person} handleDeletePerson = {handleDeletePerson}/>)\n      ) \n    }\n    const filtered = allpersons.filter(\n                    person => person.name.toLowerCase().includes(newFilter.toLowerCase()));\n    return (\n      filtered.map(person =>\n       <Note key = {person.id} person = {person} handleDeletePerson ={handleDeletePerson}/>)\n    )\n}\nexport default Display","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\n const PersonForm = (props) =>{\n    return(\n      <form onSubmit = {props.onSubmit}>\n        <div>\n          name : <input value = {props.newName} onChange={props.namehandler} />\n          number : <input value = {props.newNumber} onChange={props.numberhandler} />\n        </div>\n        <br/>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      \n    )\n }\n export default PersonForm","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nconst Filter = ({msg ,value, onChange}) =>{\n  return(\n    <div>{msg} \n    <input value = {value} onChange= {onChange}/>\n    </div>\n  )\n\n}\n\nexport default Filter;\n","const Notification = ({message}) =>{\n    if(message ===null){\n        return null;\n    }\n    const notifStyle ={\n        color: 'green',\n        background: 'lightgrey',\n        fontSize: 20,\n        borderStyle: 'solid',\n        borderRadius: 5,\n        padding: 10,\n        marginBottom: 10,\n    }\n\n    return(\n        <div style ={notifStyle}>\n            {message}\n        </div>\n    )\n}\nexport default Notification;","import React, { useEffect, useState } from 'react';\nimport Display from './Components/Display';\nimport PersonForm from './Components/PersonForm';\nimport Filter from './Components/Filter';\nimport personDB from './services/personsDB';\nimport Notification from './Components/Notification';\n\nconst App = () => {\n  const [allPersons, setAllPersons] = useState([]);\n  const [newName , setNewName] = useState('');\n  const [newNumber , setNewNumber] = useState('');\n  const [newFilter , setNewFilter] = useState('');\n  const [notification , setNotification] = useState(null);\n\n  /*useEffect(() =>\n    axios\n        .get(\"http://localhost:3001/persons\")\n        .then(response =>{\n            setAllPersons(response.data);\n        })\n  ,[])*/\n  \nuseEffect(() =>{\n  personDB.getAll().then(data => setAllPersons(data));\n}, [])\n  \n\n  const handleInputName = (event) =>{\n    setNewName(event.target.value);\n  }\n\n  const handleInputNum = (event) =>{\n    setNewNumber(event.target.value);\n  }\n  \n  const handleNotification = message =>{\n    setNotification(message);\n    setTimeout(() => {\n      setNotification(null)\n    }, 5000);\n  }\n\n  const addNote = (event) =>{\n\n    event.preventDefault()\n\n    if(newName.length < 1 || newNumber.length < 1) return\n    \n    const repeated = allPersons.filter(person => person.name === newName);\n\n    if(repeated.length > 0){\n        if(window.confirm(`${newName} already exists. Do you want to replace the old number with the new one ?`)){\n          const updatedNumber = {...repeated[0] , number : newNumber}\n\n          personDB.update(updatedNumber)\n          .then(response =>{\n            setAllPersons(allPersons.map(person =>\n              person.id == response.id ? response : person\n            ))\n            handleNotification(\n              `${response.name} updated Successfully`\n            )\n          })\n\n        }\n        return\n    }\n\n    const newObj = {\n        name : newName,\n        number : newNumber,\n        id : allPersons.reduce((t,person) => Math.max(person.id, t),0) +1\n    }\n    personDB.create(newObj).then(response => {\n      setAllPersons(allPersons.concat(response));\n      handleNotification(`${response.name} Added Successfully`) \n\n    })\n    setNewName(''); \n    setNewNumber('');\n\n  }\n\n  const handleDeletePerson = (id) =>{\n    \n    setAllPersons(allPersons.filter(\n      person=> person.id != id\n    ))\n\n  }\n  \n\n  const handleNewFilter = (event) =>{\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n\n      <h2>PhoneBook</h2>\n      <Notification message = {notification} />\n      <Filter msg = 'Filter shown with' value = {newFilter} onChange={handleNewFilter}/>\n\n      <PersonForm onSubmit = {addNote} newName = {newName}\n                  namehandler = {handleInputName}\n                  newNumber = {newNumber} numberhandler = {handleInputNum}/>\n\n     <h2>Numbers</h2>\n      <div>\n        <ul>\n          <Display allpersons = {allPersons} newFilter \n              = {newFilter} handleDeletePerson ={handleDeletePerson}/> \n        </ul>\n      </div>\n    </div>\n  )\n}\n\nexport default App","import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport App from'./App';\n\n\nReactDOM.render(\n  <App />, \ndocument.getElementById('root'))"],"sourceRoot":""}