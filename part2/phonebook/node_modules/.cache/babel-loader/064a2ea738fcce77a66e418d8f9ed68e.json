{"ast":null,"code":"var _jsxFileName = \"/home/mohamed/fullstackopen/part2/phonebook/src/Components/Display.js\";\nimport React, { useState } from 'react';\nimport personDB from '../services/personsDB';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Note = ({\n  person,\n  handleDeletePerson\n}) => {\n  const confirmDeletion = person => {\n    if (window.confirm(\"Delete \" + person.name + \" ?\")) {\n      personDB.remove(person.id);\n      handleDeletePerson(person.id);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: [person.name, \" \", person.number, /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: () => {\n        confirmDeletion(person);\n      },\n      children: \"delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Note;\n\nconst Display = ({\n  allpersons,\n  newFilter,\n  handleDeletePerson\n}) => {\n  if (newFilter.length === 0) {\n    return allpersons.map(person => /*#__PURE__*/_jsxDEV(Note, {\n      person: person,\n      handleDeletePerson: handleDeletePerson\n    }, person.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 11\n    }, this));\n  }\n\n  const filtered = allpersons.filter(person => person.name.toLowerCase().includes(newFilter.toLowerCase()));\n  return filtered.map(person => /*#__PURE__*/_jsxDEV(Note, {\n    person: person,\n    handleDeletePerson: handleDeletePerson\n  }, person.id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 8\n  }, this));\n};\n\n_c2 = Display;\nexport default Display;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"Note\");\n$RefreshReg$(_c2, \"Display\");","map":{"version":3,"sources":["/home/mohamed/fullstackopen/part2/phonebook/src/Components/Display.js"],"names":["React","useState","personDB","Note","person","handleDeletePerson","confirmDeletion","window","confirm","name","remove","id","number","Display","allpersons","newFilter","length","map","filtered","filter","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,uBAArB;;;AAGA,MAAMC,IAAI,GAAG,CAAC;AAACC,EAAAA,MAAD;AAAUC,EAAAA;AAAV,CAAD,KAAkC;AAC7C,QAAMC,eAAe,GAAIF,MAAD,IAAW;AAClC,QAAGG,MAAM,CAACC,OAAP,CAAe,YAAWJ,MAAM,CAACK,IAAlB,GAAyB,IAAxC,CAAH,EAAiD;AAC/CP,MAAAA,QAAQ,CAACQ,MAAT,CAAgBN,MAAM,CAACO,EAAvB;AACAN,MAAAA,kBAAkB,CAACD,MAAM,CAACO,EAAR,CAAlB;AAEA;AACF,GAND;;AAQA,sBACE;AAAA,eAAKP,MAAM,CAACK,IAAZ,OAAmBL,MAAM,CAACQ,MAA1B,eACI;AACA,MAAA,OAAO,EAAI,MAAM;AAACN,QAAAA,eAAe,CAACF,MAAD,CAAf;AAAwB,OAD1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAQD,CAjBD;;KAAMD,I;;AAqBN,MAAMU,OAAO,GAAG,CAAC;AAACC,EAAAA,UAAD;AAAaC,EAAAA,SAAb;AAAwBV,EAAAA;AAAxB,CAAD,KAAiD;AAC7D,MAAGU,SAAS,CAACC,MAAV,KAAoB,CAAvB,EAA0B;AACxB,WACEF,UAAU,CAACG,GAAX,CAAeb,MAAM,iBACnB,QAAC,IAAD;AAAwB,MAAA,MAAM,EAAIA,MAAlC;AAA0C,MAAA,kBAAkB,EAAIC;AAAhE,OAAaD,MAAM,CAACO,EAApB;AAAA;AAAA;AAAA;AAAA,YADF,CADF;AAID;;AACD,QAAMO,QAAQ,GAAGJ,UAAU,CAACK,MAAX,CACDf,MAAM,IAAIA,MAAM,CAACK,IAAP,CAAYW,WAAZ,GAA0BC,QAA1B,CAAmCN,SAAS,CAACK,WAAV,EAAnC,CADT,CAAjB;AAEA,SACEF,QAAQ,CAACD,GAAT,CAAab,MAAM,iBAClB,QAAC,IAAD;AAAwB,IAAA,MAAM,EAAIA,MAAlC;AAA0C,IAAA,kBAAkB,EAAGC;AAA/D,KAAaD,MAAM,CAACO,EAApB;AAAA;AAAA;AAAA;AAAA,UADD,CADF;AAIH,CAbD;;MAAME,O;AAcN,eAAeA,OAAf","sourcesContent":["import React, { useState } from 'react';\nimport personDB from '../services/personsDB'\n\n\nconst Note = ({person , handleDeletePerson}) =>{\n  const confirmDeletion = (person) =>{\n   if(window.confirm(\"Delete \"+ person.name + \" ?\")){\n     personDB.remove(person.id);\n     handleDeletePerson(person.id);\n\n    }\n  }\n\n  return (\n    <li>{person.name} {person.number} \n        <button \n        onClick = {() => {confirmDeletion(person)}}>\n          delete\n        </button>\n    </li>\n  )\n}\n\n\n\nconst Display = ({allpersons, newFilter, handleDeletePerson}) => {\n    if(newFilter.length ===0 ){\n      return(\n        allpersons.map(person =>\n          <Note key = {person.id} person = {person} handleDeletePerson = {handleDeletePerson}/>)\n      ) \n    }\n    const filtered = allpersons.filter(\n                    person => person.name.toLowerCase().includes(newFilter.toLowerCase()));\n    return (\n      filtered.map(person =>\n       <Note key = {person.id} person = {person} handleDeletePerson ={handleDeletePerson}/>)\n    )\n}\nexport default Display"]},"metadata":{},"sourceType":"module"}