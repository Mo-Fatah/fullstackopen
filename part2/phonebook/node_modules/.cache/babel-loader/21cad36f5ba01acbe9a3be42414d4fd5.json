{"ast":null,"code":"var _jsxFileName = \"/home/mohamed/fullstackopen/part2/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport Course from './Course';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([{\n    id: 1,\n    name: \"Mohamed\"\n  }]);\n  const [newName, setNewName] = useState('');\n\n  const handleInput = event => {\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n    if (newName.length < 1) return;\n    const newNameObj = {\n      id: persons.length + 1,\n      name: newName\n    };\n    setPersons(persons.concat(newNameObj));\n    setNewName('');\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"PhoneBook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newName,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: persons.map(person => /*#__PURE__*/_jsxDEV(Note, {\n          person: person\n        }, person.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"KYIufscx+vw0oM3y2Q3+WYlUv64=\");\n\n_c = App;\n\nconst Note = ({\n  person\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: person.name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Note;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Note\");","map":{"version":3,"sources":["/home/mohamed/fullstackopen/part2/src/index.js"],"names":["React","useState","ReactDOM","Course","App","persons","setPersons","id","name","newName","setNewName","handleInput","event","console","log","target","value","addNote","preventDefault","length","newNameObj","concat","map","person","Note","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAWC,UAAX,IAAyBL,QAAQ,CAAC,CAAC;AACvCM,IAAAA,EAAE,EAAE,CADmC;AAEvCC,IAAAA,IAAI,EAAG;AAFgC,GAAD,CAAD,CAAvC;AAIA,QAAM,CAACC,OAAD,EAAWC,UAAX,IAAyBT,QAAQ,CAAC,EAAD,CAAvC;;AAGA,QAAMU,WAAW,GAAIC,KAAD,IAAU;AAC5BC,IAAAA,OAAO,CAACC,GAAR,CAAYF,KAAK,CAACG,MAAN,CAAaC,KAAzB;AACAN,IAAAA,UAAU,CAACE,KAAK,CAACG,MAAN,CAAaC,KAAd,CAAV;AACD,GAHD;;AAKA,QAAMC,OAAO,GAAIL,KAAD,IAAU;AACxBA,IAAAA,KAAK,CAACM,cAAN;AACA,QAAGT,OAAO,CAACU,MAAR,GAAiB,CAApB,EAAuB;AACvB,UAAMC,UAAU,GAAG;AACjBb,MAAAA,EAAE,EAAGF,OAAO,CAACc,MAAR,GAAe,CADH;AAEjBX,MAAAA,IAAI,EAAGC;AAFU,KAAnB;AAIAH,IAAAA,UAAU,CAACD,OAAO,CAACgB,MAAR,CAAeD,UAAf,CAAD,CAAV;AACAV,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GATD;;AAWA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAIO,OAAlB;AAAA,8BACE;AAAA,2CACS;AAAO,UAAA,KAAK,EAAIR,OAAhB;AAAyB,UAAA,QAAQ,EAAEE;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADT;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAA,6BACE;AAAA,kBACCN,OAAO,CAACiB,GAAR,CAAYC,MAAM,iBACjB,QAAC,IAAD;AAAwB,UAAA,MAAM,EAAIA;AAAlC,WAAaA,MAAM,CAAChB,EAApB;AAAA;AAAA;AAAA;AAAA,gBADD;AADD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CA9CD;;GAAMH,G;;KAAAA,G;;AAgDN,MAAMoB,IAAI,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAa;AACxB,sBACE;AAAA,cAAKA,MAAM,CAACf;AAAZ;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;MAAMgB,I;AAMNtB,QAAQ,CAACuB,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport Course from './Course';\n\n\nconst App = () => {\n  const [persons , setPersons] = useState([{\n    id :1, \n    name : \"Mohamed\"\n  }])\n  const [newName , setNewName] = useState('');\n\n\n  const handleInput = (event) =>{\n    console.log(event.target.value);\n    setNewName(event.target.value);\n  }\n\n  const addNote = (event) =>{\n    event.preventDefault()\n    if(newName.length < 1) return\n    const newNameObj = {\n      id : persons.length+1,\n      name : newName\n    }\n    setPersons(persons.concat(newNameObj))\n    setNewName(''); \n  }\n\n  return (\n    <div>\n      <h2>PhoneBook</h2>\n      <form onSubmit = {addNote}>\n        <div>\n          name : <input value = {newName} onChange={handleInput} />\n        </div>\n        <br/>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <div>\n        <ul>\n        {persons.map(person =>\n          <Note key = {person.id} person = {person}/>)\n          }\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nconst Note = ({person}) =>{\n  return (\n    <li>{person.name}</li>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}