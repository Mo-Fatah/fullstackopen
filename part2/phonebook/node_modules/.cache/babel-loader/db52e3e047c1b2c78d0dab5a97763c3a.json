{"ast":null,"code":"var _jsxFileName = \"/home/mohamed/fullstackopen/part2/src/index.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport Course from './Course';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst App = () => {\n  _s();\n\n  const [persons, setPersons] = useState([]);\n  const [newName, setNewName] = useState('');\n\n  const handleInput = event => {\n    setNewName(event.target.value);\n  };\n\n  const addNote = event => {\n    event.preventDefault();\n    if (newName.length < 1) return;\n\n    if (checkForredunds(newName)) {\n      window.alert(`${newName} already exists`);\n      return;\n    }\n\n    setPersons(persons.concat(newName));\n    setNewName('');\n  };\n\n  const checkForredunds = ({\n    name\n  }) => {\n    console.log(persons.findIndex(n => n === name));\n    if (persons.findIndex(n => n === name) != -1) return true;else return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"PhoneBook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: addNote,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [\"name : \", /*#__PURE__*/_jsxDEV(\"input\", {\n          value: newName,\n          onChange: handleInput\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 18\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"submit\",\n          children: \"add\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Numbers\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: persons.map(person => /*#__PURE__*/_jsxDEV(Note, {\n          person: person\n        }, person, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"mbHKBDaLQT7surhUeFtVcJTNCLs=\");\n\n_c = App;\n\nconst Note = ({\n  person\n}) => {\n  return /*#__PURE__*/_jsxDEV(\"li\", {\n    children: person\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n};\n\n_c2 = Note;\nReactDOM.render( /*#__PURE__*/_jsxDEV(App, {}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 63,\n  columnNumber: 17\n}, this), document.getElementById('root'));\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"Note\");","map":{"version":3,"sources":["/home/mohamed/fullstackopen/part2/src/index.js"],"names":["React","useState","ReactDOM","Course","App","persons","setPersons","newName","setNewName","handleInput","event","target","value","addNote","preventDefault","length","checkForredunds","window","alert","concat","name","console","log","findIndex","n","map","person","Note","render","document","getElementById"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAGA,MAAMC,GAAG,GAAG,MAAM;AAAA;;AAChB,QAAM,CAACC,OAAD,EAAWC,UAAX,IAAyBL,QAAQ,CAAC,EAAD,CAAvC;AACA,QAAM,CAACM,OAAD,EAAWC,UAAX,IAAyBP,QAAQ,CAAC,EAAD,CAAvC;;AAGA,QAAMQ,WAAW,GAAIC,KAAD,IAAU;AAC5BF,IAAAA,UAAU,CAACE,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAV;AACD,GAFD;;AAIA,QAAMC,OAAO,GAAIH,KAAD,IAAU;AACxBA,IAAAA,KAAK,CAACI,cAAN;AACA,QAAGP,OAAO,CAACQ,MAAR,GAAiB,CAApB,EAAuB;;AAEvB,QAAGC,eAAe,CAACT,OAAD,CAAlB,EAA4B;AAC1BU,MAAAA,MAAM,CAACC,KAAP,CAAc,GAAEX,OAAQ,iBAAxB;AACA;AACD;;AAEDD,IAAAA,UAAU,CAACD,OAAO,CAACc,MAAR,CAAeZ,OAAf,CAAD,CAAV;AACAC,IAAAA,UAAU,CAAC,EAAD,CAAV;AACD,GAXD;;AAYA,QAAMQ,eAAe,GAAG,CAAC;AAACI,IAAAA;AAAD,GAAD,KAAW;AACjCC,IAAAA,OAAO,CAACC,GAAR,CAAYjB,OAAO,CAACkB,SAAR,CAAmBC,CAAD,IAAOA,CAAC,KAAIJ,IAA9B,CAAZ;AACA,QAAGf,OAAO,CAACkB,SAAR,CAAmBC,CAAD,IAAOA,CAAC,KAAIJ,IAA9B,KAAuC,CAAC,CAA3C,EAA8C,OAAO,IAAP,CAA9C,KACK,OAAO,KAAP;AACN,GAJD;;AAMA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAM,MAAA,QAAQ,EAAIP,OAAlB;AAAA,8BACE;AAAA,2CACS;AAAO,UAAA,KAAK,EAAIN,OAAhB;AAAyB,UAAA,QAAQ,EAAEE;AAAnC;AAAA;AAAA;AAAA;AAAA,gBADT;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,eAIE;AAAA;AAAA;AAAA;AAAA,cAJF,eAKE;AAAA,+BACE;AAAQ,UAAA,IAAI,EAAC,QAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF,eAWE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAXF,eAYE;AAAA,6BACE;AAAA,kBACCJ,OAAO,CAACoB,GAAR,CAAYC,MAAM,iBACjB,QAAC,IAAD;AAAqB,UAAA,MAAM,EAAIA;AAA/B,WAAaA,MAAb;AAAA;AAAA;AAAA;AAAA,gBADD;AADD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAZF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD,CAjDD;;GAAMtB,G;;KAAAA,G;;AAmDN,MAAMuB,IAAI,GAAG,CAAC;AAACD,EAAAA;AAAD,CAAD,KAAa;AACxB,sBACE;AAAA,cAAKA;AAAL;AAAA;AAAA;AAAA;AAAA,UADF;AAGD,CAJD;;MAAMC,I;AAMNzB,QAAQ,CAAC0B,MAAT,eAAgB,QAAC,GAAD;AAAA;AAAA;AAAA;AAAA,QAAhB,EAAyBC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAAzB","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport Course from './Course';\n\n\nconst App = () => {\n  const [persons , setPersons] = useState([])\n  const [newName , setNewName] = useState('');\n\n\n  const handleInput = (event) =>{\n    setNewName(event.target.value);\n  }\n\n  const addNote = (event) =>{\n    event.preventDefault()\n    if(newName.length < 1) return\n\n    if(checkForredunds(newName)){\n      window.alert(`${newName} already exists`)\n      return;\n    }\n\n    setPersons(persons.concat(newName))\n    setNewName(''); \n  }\n  const checkForredunds = ({name}) =>{\n    console.log(persons.findIndex((n) => n ===name));\n    if(persons.findIndex((n) => n ===name) != -1) return true;\n    else return false;\n  }\n\n  return (\n    <div>\n      <h2>PhoneBook</h2>\n      <form onSubmit = {addNote}>\n        <div>\n          name : <input value = {newName} onChange={handleInput} />\n        </div>\n        <br/>\n        <div>\n          <button type=\"submit\">add</button>\n        </div>\n      </form>\n      <h2>Numbers</h2>\n      <div>\n        <ul>\n        {persons.map(person =>\n          <Note key = {person} person = {person}/>)\n          }\n        </ul>\n      </div>\n    </div>\n  )\n}\n\nconst Note = ({person}) =>{\n  return (\n    <li>{person}</li>\n  )\n}\n\nReactDOM.render(<App />, document.getElementById('root'))"]},"metadata":{},"sourceType":"module"}